                                 // ASM code in rom:
rom[0]   = 0b1001001000001000;  // L1:  ADDI        R1,R0,8
rom[1]   = 0b1001001000001000;  //      ADDI        R2,R1,8
rom[2]   = 0b1001010001001000;  //      ADDI        R3,R2,8
rom[3]   = 0b1001011010001000;  //      ADD         R4,R2,R3
rom[4]   = 0b0001100010011000;  //      ST          R4,R1,2
rom[5]   = 0b1011100001000010;  //      LD          R5,R1,2
rom[6]   = 0b1010101001000010;  //      SUB         R6,R4,R5
rom[7]   = 0b0010110100101000;  //      BZ          R6,L1
rom[8]   = 0b1100000110111000;  //      ADDI        R7,R7,1
rom[9]   = 0b1001111111000001;
rom[10]  = 0b0000000000000000;
rom[11]  = 0b0000000000000000;
rom[12]  = 0b0000000000000000;
rom[13]  = 0b0000000000000000;
rom[14]  = 0b0000000000000000;
rom[15]  = 0b0000000000000000;
rom[16]  = 0b0000000000000000;

//                          imm____
//             inst dst sc1 sc2
//rom[1]   = 0b1001_001_000_001_000;  // L1:  ADDI        R1,R0,8
//rom[2]   = 0b1001_010_001_001_000;  //      ADDI        R2,R1,8
//rom[3]   = 0b1001_011_010_001_000;  //      ADDI        R3,R2,8
//rom[4]   = 0b0001_100_010_011_000;  //      ADD         R4,R2,R3
//rom[5]   = 0b1011_100_001_000_010;  //      ST          R4,R1,2
//rom[6]   = 0b1010_101_001_000_010;  //      LD          R5,R1,2
//rom[7]   = 0b0010_110_100_101_000;  //      SUB         R6,R4,R5
//rom[8]   = 0b1100_000_110_111_000;  //      BZ          R6,L1
//rom[9]   = 0b1001_111_111_000_001;  //      ADDI        R7,R7,1
//rom[10]  = 0b0000_000_000_000_000;
//rom[11]  = 0b0000_000_000_000_000;
//rom[12]  = 0b0000_000_000_000_000;
//rom[13]  = 0b0000_000_000_000_000;
//rom[14]  = 0b0000_000_000_000_000;
//rom[15]  = 0b0000_000_000_000_000;
//rom[16]  = 0b0000_000_000_000_000;
